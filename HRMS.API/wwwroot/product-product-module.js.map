{"version":3,"sources":["./src/app/routes/product/stock-update/stock-update.component.ts","./src/app/routes/product/stock-update/stock-update.component.html","./src/app/routes/product/product.module.ts","./src/app/routes/stock/stock.service.ts","./src/app/routes/product/product-list/product-list.component.ts","./src/app/routes/product/product-list/product-list.component.html","./src/app/routes/product/product-routing.module.ts","./src/app/routes/product/product-create/product-create.component.ts","./src/app/routes/product/product-create/product-create.component.html"],"names":[],"mappings":"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","file":"product-product-module.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Stock } from '../../stock/stock.model';\nimport { StockService } from '../../stock/stock.service';\nimport { Product } from '../product.model';\n\n@Component({\n  selector: 'app-stock-update',\n  templateUrl: './stock-update.component.html',\n  styleUrls: ['./stock-update.component.scss']\n})\nexport class StockUpdateComponent implements OnInit {\n  stockForm: FormGroup;\n  stock : Stock;\n  isLoading=false;\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Product,\n  private stockService: StockService, public dialogRef: MatDialogRef<StockUpdateComponent>) {}\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  private createForm() {\n    this.stockForm = new FormGroup(\n      {\n        quantity: new FormControl(null, Validators.required),\n        entryDate: new FormControl(null,Validators.required)\n      }\n    );\n  }\n\n\n  onSave(){\n    if(this.stockForm.invalid)\n    {\n      return;\n    }\n\n    this.isLoading=true\n    this.stockService.createStock(this.getData()).subscribe(data => {\n        this.isLoading=false;\n        this.stockForm.reset();\n        this.dialogRef.close(true);\n    })\n  }\n\n  getData(): Stock {\n    return (this.stock = {\n      id: null,\n      quantity: this.stockForm.get('quantity').value,\n      entryDate: this.stockForm.get('entryDate').value,\n      productId: this.data.id,\n      type: 1\n    });\n  }\n}\n","<form [formGroup]=\"stockForm\">\n  <h1 mat-dialog-title>Update Stock of <b> {{data.name}}</b></h1>\n  <mat-dialog-content>\n    <div fxLayout=\"column\" fxFlex=\"100%\">\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"Quantity\" autocomplete=\"off\" formControlName=\"quantity\" type=\"number\"/>\n        <mat-error *ngIf=\"stockForm.controls['quantity'].hasError('required')\">\n          Quantity is\n          <strong>required</strong>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\">\n        <mat-label>Choose a date</mat-label>\n        <input matInput formControlName=\"entryDate\" [matDatepicker]=\"picker\" autocomplete=\"off\"/>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n        <mat-error *ngIf=\"stockForm.controls['entryDate'].hasError('required')\">\n          Date is\n          <strong>required</strong>\n        </mat-error>\n      </mat-form-field>\n      <p></p>\n    </div>\n  </mat-dialog-content>\n  <mat-dialog-actions>\n    <mat-progress-bar color=\"accent\" mode=\"indeterminate\" *ngIf=\"isLoading\">\n    </mat-progress-bar>\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"isLoading\" (click)=\"onSave()\">Save</button>\n    <button mat-raised-button mat-dialog-close color=\"warn\" [disabled]=\"isLoading\">Close</button>\n  </mat-dialog-actions>\n</form>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductRoutingModule } from './product-routing.module';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\nimport { ProductCreateComponent } from './product-create/product-create.component';\r\nimport { ReactiveFormsModule,FormsModule } from \"@angular/forms\";\r\nimport { StockUpdateComponent } from './stock-update/stock-update.component';\r\nimport { SharedModule } from '@shared';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductListComponent,\r\n    ProductCreateComponent,\r\n    StockUpdateComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    ProductRoutingModule,\r\n  ],\r\n  entryComponents: []\r\n})\r\nexport class ProductModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '@env/environment';\r\nimport { Stock } from './stock.model';\r\n\r\nconst BACKEND_URL = environment.baseUrl + \"/stock/\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StockService {\r\n\r\nconstructor(private http: HttpClient) { }\r\n\r\n  createStock(stock: Stock) {\r\n    return this.http\r\n      .post<{ message: string; stock: Stock }>(BACKEND_URL, stock)\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { Product } from '../product.model';\nimport { ProductService } from '../product.service';\nimport { NgForm} from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { StockUpdateComponent } from '../stock-update/stock-update.component';\nimport { MtxDialog, MtxGridColumn } from '@ng-matero/extensions';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss']\n})\nexport class ProductListComponent implements OnInit, OnDestroy{\n\n  columns: MtxGridColumn[] = [\n    {\n      header: this.translate.stream('product_list_table.name'),\n      field: 'name',\n      sortable: true,\n      disabled: true,\n      minWidth: 100,\n    },\n    {\n      header: this.translate.stream('product_list_table.categoryName'),\n      field: 'categoryName',\n      sortable: true,\n      minWidth: 100,\n    },\n    {\n      header: this.translate.stream('product_list_table.stock'),\n      field: 'stock',\n      sortable: true,\n      minWidth: 100,\n    },\n    {\n      header: this.translate.stream('product_list_table.unit'),\n      field: 'unit',\n      sortable: true,\n      minWidth: 100,\n    },\n    {\n      header: this.translate.stream('product_list_table.bprice'),\n      field: 'bprice',\n      sortable: true,\n      minWidth: 100,\n    },\n    {\n      header: this.translate.stream('product_list_table.price'),\n      field: 'price',\n      sortable: true,\n      minWidth: 100,\n    },\n    {\n      header: this.translate.stream('product_list_table.description'),\n      field: 'description',\n      sortable: true,\n      minWidth: 100,\n    },\n    {\n      header: this.translate.stream('product_list_table.supplierName'),\n      field: 'supplierName',\n      sortable: true,\n      minWidth: 100,\n    },\n    {\n      header: this.translate.stream('product_list_table.operation'),\n      field: 'operation',\n      minWidth: 120,\n      width: '160px',\n      pinned: 'right',\n      type: 'button',\n      buttons: [\n        {\n          type: 'icon',\n          icon: 'add_box',\n          tooltip: this.translate.stream('product_list_table.edit'),\n          click: record => this.onStockUpdate(record),\n        },\n        {\n          type: 'icon',\n          icon: 'edit',\n          tooltip: this.translate.stream('product_list_table.edit'),\n          click: record => this.edit(record),\n        },\n        {\n          color: 'warn',\n          icon: 'delete',\n          text: this.translate.stream('product_list_table.delete'),\n          tooltip: this.translate.stream('product_list_table.delete'),\n          pop: true,\n          popTitle: this.translate.stream('product_list_table.confirm_delete'),\n          popCloseText: this.translate.stream('product_list_table.close'),\n          popOkText: this.translate.stream('product_list_table.ok'),\n          click: record => this.delete(record),\n        },\n      ],\n    },\n  ];\n\n  isLoading=false;\n  mainList = [];\n  listData  = [];\n  searchKey: string;\n  private productsSub: Subscription;\n\n  constructor(private productService: ProductService,\n    private translate: TranslateService,\n    public dialog: MtxDialog,\n    private router: Router,\n    private cdr: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    this.isLoading=true;\n    this.productService.getProducts();\n    this.productsSub = this.productService\n      .getProductUpdateListener()\n      .subscribe((productData: { products: Product[]; count: number }) => {\n        this.mainList = productData.products;\n        this.listData=this.mainList;\n        this.isLoading=false;\n    });\n  }\n\n\n  onSearchClear() {\n    this.searchKey = \"\";\n    this.listData = this.mainList;\n  }\n\n  applyFilter() {\n    this.listData = this.filter(this.mainList);\n  }\n\n  filter(data:any){\n    return data.filter(obj=>{\n        return obj.name.toLowerCase().includes(this.searchKey)\n        || obj.categoryName.toLowerCase().includes(this.searchKey)\n        || obj.unit.toLowerCase().includes(this.searchKey)\n        || obj.supplierName.toLowerCase().includes(this.searchKey)\n      }\n    )\n  }\n\n  edit(value) {\n    this.router.navigate(['/product/edit', value.id ]);\n  }\n\n  delete(value) {\n    this.isLoading=true;\n    this.productService.deleteProduct(value.id).subscribe(() => {\n      this.productService.getProducts();\n    }, () => {\n      this.isLoading=false;\n    });\n  }\n\n  onStockUpdate(item: Product){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"50%\";\n    dialogConfig.data=item;\n    this.dialog.originalOpen(StockUpdateComponent,dialogConfig).afterClosed().subscribe((confirmed: boolean)=>{\n      if(confirmed){\n        this.productService.getProducts();\n      }\n    });\n  }\n\n  ngOnDestroy(){\n    this.productsSub.unsubscribe();\n  }\n}\n","<page-header class=\"bg-blue-600\" [nav]=\"['home','menu.product','menu.product.list']\"></page-header>\n\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n  <mat-form-field floatLabel=\"never\" fxFlex=\"30\" class=\"m-r-8\">\n    <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search\" autocomplete=\"off\" (keyup)=\"applyFilter()\">\n    <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </mat-form-field>\n\n  <button class=\"m-r-8\" mat-raised-button color=\"primary\" routerLink=\"/product/create\"><mat-icon>add</mat-icon> Add New</button>\n</div>\n\n<mtx-grid [data]=\"listData\"\n          [columns]=\"columns\"\n          [loading]=\"isLoading\"\n          [columnResizable]=\"false\"\n          [rowHover]=\"true\"\n          [rowStriped]=\"true\"\n          [showToolbar]=\"true\"\n          [toolbarTitle]=\"'Product Grid Toolbar'\"\n          [pageOnFront]=\"true\"\n          [showPaginator]=\"true\"\n          [pageSizeOptions]=\"[10,20,30]\"\n          [pageIndex]=\"0\"\n          [pageSize]=\"10\">\n</mtx-grid>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductCreateComponent } from './product-create/product-create.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"list\",\r\n    component: ProductListComponent\r\n  },\r\n  {\r\n    path: \"create\",\r\n    component: ProductCreateComponent\r\n  },\r\n  {\r\n    path: \"edit/:id\",\r\n    component: ProductCreateComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductRoutingModule { }\r\n","import { AfterViewInit, Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSelect } from '@angular/material/select';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { DropdownItem } from '@shared/models/dropdown-item';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { CategoryService } from '../../category/category.service';\n\nimport { SupplierService } from '../../supplier/supplier.service';\nimport { Product } from '../product.model';\nimport { ProductService } from '../product.service';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.scss']\n})\nexport class ProductCreateComponent implements OnInit,AfterViewInit, OnDestroy {\n\n  isLoading=false;\n\n  product: Product;\n  productForm: FormGroup;\n  private mode = \"create\";\n  private id: any;\n\n  public categories : DropdownItem[];\n  public suppliers : DropdownItem[];\n\n\n\n  constructor(private productService: ProductService, private categoryService: CategoryService,\n    private supplierservice: SupplierService, public route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.createForm();\n    this.isLoading=true;\n    this.supplierservice.getSuppliersShort().subscribe(data => {\n      this.isLoading=false;\n      this.suppliers = data;\n    });\n\n    this.isLoading=true;\n    this.categoryService.getCategoriesShort().subscribe(data => {\n      this.isLoading=false;\n      this.categories=data;\n    });\n\n\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\n      if (paramMap.has(\"id\")) {\n        this.mode = \"edit\";\n        this.id = paramMap.get(\"id\");\n\n        this.isLoading=true;\n        this.productService.getProduct(this.id).subscribe(data => {\n          this.isLoading=false;\n          this.product = {\n            id: data.id,\n            name: data.name,\n            categoryId: data.categoryId,\n            categoryName: data.categoryName,\n            unit: data.unit,\n            bprice: data.bprice,\n            price: data.price,\n            description: data.description,\n            supplierId : data.supplierId,\n            supplierName: data.supplierName\n          };\n\n          this.productForm.setValue({\n            name: this.product.name,\n            category: this.product.categoryId,\n            description: this.product.description,\n            supplier:this.product.supplierId,\n            unit :  this.product.unit,\n            price : this.product.price,\n            bprice : this.product.bprice\n          });\n        });\n      } else {\n        this.mode = \"create\";\n        this.id = null;\n      }\n    });\n\n  }\n\n  private createForm() {\n    this.productForm = new FormGroup(\n      {\n        name: new FormControl(null, Validators.required),\n        category: new FormControl(null,Validators.required),\n        supplier: new FormControl(null,Validators.required),\n        unit: new FormControl(null,Validators.required),\n        bprice : new FormControl(null,Validators.required),\n        price : new FormControl(null,Validators.required),\n        description: new FormControl(null)\n      }\n    );\n  }\n\n  onSavePost() {\n    if (this.productForm.invalid) {\n      this.productForm.markAllAsTouched();\n      return;\n    }\n    this.isLoading=true;\n    if (this.mode === \"create\") {\n      this.productService.addProduct(this.userData());\n    }\n    else {\n      this.productService.updateProduct(this.userData());\n    }\n  }\n\n\n  userData(): Product {\n    return (this.product = {\n      id: this.mode=='create'?null:this.id,\n      name: this.productForm.get('name').value,\n      description: this.productForm.get('description').value,\n      bprice: this.productForm.get('bprice').value,\n      price: this.productForm.get('price').value,\n      unit: this.productForm.get('unit').value,\n      categoryId: this.productForm.get('category').value,\n      supplierId: this.productForm.get('supplier').value,\n    });\n  }\n\n  onReset() {\n    this.productForm.reset();\n  }\n\n  ngAfterViewInit() {\n  }\n\n  ngOnDestroy() {\n\n  }\n}\n","<page-header\n  class=\"bg-blue-600\"\n  [nav]=\"['home', 'menu.product', 'menu.product.create']\"\n></page-header>\n\n<mat-progress-bar mode=\"indeterminate\" *ngIf=\"isLoading\"></mat-progress-bar>\n<mat-card>\n  <form [formGroup]=\"productForm\" class=\"form-field-full\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\n      <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\n        <mat-form-field>\n          <mat-label>Choose a category</mat-label>\n\n          <mtx-select [items]=\"categories\" bindLabel=\"name\" bindValue=\"id\"\n            formControlName=\"category\">\n          </mtx-select>\n\n          <mat-error *ngIf=\"productForm.controls['category'].hasError('required')\">\n            Category is\n            <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\n        <mat-form-field>\n          <mat-label>Choose a supplier</mat-label>\n          <mtx-select [items]=\"suppliers\" bindLabel=\"name\" bindValue=\"id\"\n            formControlName=\"supplier\">\n          </mtx-select>\n          <mat-error *ngIf=\"productForm.controls['supplier'].hasError('required')\">\n            Supplier is\n            <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n      </div>\n      <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\n        <mat-form-field>\n          <input\n            matInput\n            placeholder=\"Name\"\n            formControlName=\"name\"\n            autocomplete=\"name\"\n            type=\"text\"\n          />\n          <mat-error *ngIf=\"productForm.controls['name'].hasError('required')\">\n            Name is\n            <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\n        <mat-form-field>\n          <textarea\n            matInput\n            placeholder=\"Description\"\n            rows=\"1\"\n            formControlName=\"description\"\n          ></textarea>\n        </mat-form-field>\n      </div>\n\n      <div fxFlex=\"34\" fxFlex.lt-sm=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Unit\" formControlName=\"unit\" type=\"text\" />\n          <mat-error *ngIf=\"productForm.controls['unit'].hasError('required')\">\n            Unit is\n            <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Cost Price\" formControlName=\"bprice\" type=\"number\" />\n          <mat-error *ngIf=\"productForm.controls['bprice'].hasError('required')\">\n            Cost Price is\n            <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n      <div fxFlex=\"33\" fxFlex.lt-sm=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Price\" formControlName=\"price\" type=\"number\" />\n          <mat-error *ngIf=\"productForm.controls['price'].hasError('required')\">\n            Price is\n            <strong>required</strong>\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <button\n      mat-raised-button\n      color=\"primary\"\n      type=\"submit\"\n      [disabled]=\"isLoading\"\n      (click)=\"onSavePost()\"\n    >\n      Save\n    </button>\n  </form>\n</mat-card>\n"],"sourceRoot":"webpack:///"}